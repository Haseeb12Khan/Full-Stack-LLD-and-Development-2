				QUESTION

Using async await complete the function n-Series(fileArray, ansArray), that takes in fileArray and ansArray, in which fileArray is an array of file names.

Write the code such that:
	1. All the files in the fileArray are serially read using the fetchByPromise(fileName)
	2. Add the content of both files in the ansArray.
	3. At the end of the contents, the ansArray should hold string "All files have been read"

Example:
	Input:	let ansArray = [];
		let fileArray = ["FILE 1", "FILE 2"];
		nSeries(fileArray, ansArray);

	Output:	ansArray = ['content : FILE 1', 'content : FILE 2', 'All files have been read']
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <script defer>
        function fetchByPromise(fileName) {
            return new Promise(function (resolve, reject) {
                setTimeout(function () {
                    resolve(`content : ${fileName}`);
                }, 100 * Math.random());
            });
        }
    </script>

    <script id='solution' defer>
        async function nSeries(fileArray, ansArray) {
            let data = await fetchByPromise(fileArray[0]);
            ansArray.push(data);
            for(let i=1;i<fileArray.length;i++) {
                data = await fetchByPromise(fileArray[i]);
                ansArray.push(data);
            }
            ansArray.push('All files have been read');
            return ansArray;
        }
    </script>
</body>

</html>