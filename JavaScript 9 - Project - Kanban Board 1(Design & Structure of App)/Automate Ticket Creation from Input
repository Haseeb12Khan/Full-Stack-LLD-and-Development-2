				QUESTION

Write JS program that can create a new ticket based in the input being provided.

You have been given boilerplate HTML and CSS code that you need to study and utilise.

.textArea-cont in the input modal would take in the content of the ticket.
Whenever, user inputs the content and presses 'shift' key it should:

1. Create a new ticket (div.ticket-cont) with the below html sturcture:
```
<div class="ticket-color ${ticketColor}"></div>
<div class="ticket-id">#${id}</div>
<div class="task-area">${ticketTask}</div>
<div class="ticket-lock">
<i class="fa-solid fa-lock"></i>
</div>
```
2. Where out of the variables in the above boilerplate:
2.1. ticketColor can be of any color.
2.2. id should be from ticketID var, it should start from 0 and increment for each ticket.
2.3. ticketTask should be the text input by user in the .textArea-cont
3. You need to add this new ticket to the div.main-cont

The boilerplate JS code contains a createTicket() function that you need to complete in order to make the feature work.

Write the code in script.js file.

Test Cases:
	-> Verify that a ticket (div.ticket-cont) is added to div.main-cont when 'shift' key is pressed.
-------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

index.html
------------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Ticket Management App</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="toolbox-cont">
        <div class="toolbox-priority-cont">
            <div class="lightpink color"></div>
            <div class="lightgreen color"></div>
            <div class="lightblue color"></div>
            <div class="black color"></div>
        </div>
        <div class="action-btn-cont">
            <div class="add-btn">
                <img src="plus-logo.png" alt="color-logo" height="50%">
            </div>
            <div class="remove-btn">
                <img src="cross-logo.png" alt="color-logo" height="50%">
            </div>
        </div>
    </div>
    <div class="main-cont">
        <!-- <div class="ticket-cont">
            <div class="ticket-color"></div>
            <div class="ticket-id">id 1</div>
            <div class="task-area"> this  is task 1</div>
            <div class="ticket-lock">
              <i class="fa-solid fa-lock"></i>
           </div> -->
    </div>
    </div>
    <!-- Modal -->
    <div class="modal-cont">
        <textarea class="textArea-cont" placeholder="Enter Your Task" spellcheck="false">
        </textarea>
        <div class="priority-colors-container">
            <div class="lightpink priority-color"></div>
            <div class="lightgreen priority-color"></div>
            <div class="lightblue priority-color"></div>
            <div class="black priority-color active"></div>
        </div>
    </div>
    <script src="script.js"></script>
    <script defer>
        let addBtn = document.querySelector(".add-btn");
        let addFlag = false;
        addBtn.addEventListener("click", function () {
            addFlag = !addFlag;

            if (addFlag == true) {
                modalCont.style.display = "flex";
            } else {
                modalCont.style.display = "none";
            }
        });
    </script>
</body>
</html>


script.js
--------------------------
let modalCont = document.querySelector(".modal-cont");
let mainCont = document.querySelector(".main-cont");
let taskArea = document.querySelector(".textArea-cont");

let colors = ["lightpink", "lightgreen", "lightblue", "black"];
let allPriorityColors = document.querySelectorAll(".priority-color");

let modalPriorityColor = colors[colors.length - 1];
let ticketID = 0;

// TICKET IS CREATED WHEN SHIFT IS PRESSED
modalCont.addEventListener("keydown", function (e) {
  let key = e.key;

  if (key == "Shift") {
    createTicket(taskArea.value, modalPriorityColor);
    modalCont.style.display = "none";
    addFlag = false;
    taskArea.value = "";
  }
});

// ADDING TICKET TO DOM
function createTicket(ticketTask, ticketColor) {
  let id = ticketID++;
  const ticket_container = document.createElement("div");
  ticket_container.setAttribute("class","ticket-cont");
  let data = `<div class="ticket-color ${ticketColor}"></div>
    <div class="ticket-id">#${id}</div>
    <div class="task-area">${ticketTask}</div>
    <div class="ticket-lock">
    <i class="fa-solid fa-lock"></i>
    </div>`;
  ticket_container.innerHTML = data;
  mainCont.appendChild(ticket_container);
}
