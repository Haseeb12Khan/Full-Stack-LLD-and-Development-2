				QUESTION

Write a JS program to successfully make the given Counter function.

The counter has several components with dedicated functions, here is the list for the same:
	1. span#number => contains the current number value.
	2. input#increment => field that takes the input for the increment number/factor. (default is 1)
	3. button#add => when clicked updates the span#number by adding increment number to it.
	4. button#subtract => when clicked updates the span#number by subtracting increment number from it.
	5. button#reset => changes the span#number to 0 again.

Make sure the input for increment number is always parsed to Integer using parseInt(input).

Use the above information to write the entire JS program in the script.js file or script tag.

Refer to the test cases to further understand the criteria to submit the problem successfully.

Test Cases:
	-> Verify that add button is working.
	-> Verify that subtract button is working.
	-> Verify that increment input field is working.
	-> Verify that reset button is working.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
				SOLUTION

index.html
-----------------------------------

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Ticket Management App</title>
    <link rel="stylesheet" href="style.css">
</head>

<body>
    <div class="container">
        <h1>Counter</h1>
        <span id="number" class="number">0</span>
        <div class="row">Increment / Decrement by <input id="increment" type="number" min="1" max="10" value="1" />
        </div>
        <div class="row">
            <button id="add" class="add">+</button>
            <button id="subtract" class="subtract">-</button>
        </div>
        <button id="reset" class="reset">Reset</button>
    </div>
    <script src="script.js"></script>
</body>

</html>



style.css
------------------------------------------

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.number {
  font-size: 50px;
}

.row {
  margin-top: 15px;
}

.add {
  background-color: green;
  font-size: 40px;
  width: 50px;
  border-radius: 5px;
  border: 0px solid;
  cursor: pointer;
}

.subtract {
  background-color: red;
  font-size: 40px;
  width: 50px;
  border-radius: 5px;
  border: 0px solid;
  cursor: pointer;
}

.reset {
  margin-top: 10px;
  background-color: yellow;
  font-size: 40px;
  border-radius: 5px;
  border: 1px solid black;
  cursor: pointer;
}

.add:active {
  background-color: lightgreen;
}

.subtract:active {
  background-color: lightcoral;
}

.reset:active {
  background-color: lightyellow;
}



script.js
------------------------------------------

const numberVal = document.querySelector("#number");
const incrementBy = document.querySelector("#increment")
const incrementVal = document.querySelector("#add");
const decrementVal = document.querySelector("#subtract");
const resetVal = document.querySelector("#reset");

incrementVal.addEventListener("click", function() {
  let newValue = Number(numberVal.textContent) + Number(incrementBy.value);
  numberVal.textContent = newValue;
});

decrementVal.addEventListener("click", function() {
  let newValue = Number(numberVal.textContent) - Number(incrementBy.value);
  numberVal.textContent = newValue;
});

resetVal.addEventListener("click", function() {
  numberVal.textContent = 0;
  incrementBy.value = 1;
});
